{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Michael\\\\Documents\\\\GitHub\\\\fromagent\\\\client\\\\src\\\\components\\\\form.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router';\nimport Select from 'react-select';\nimport { useAuthState } from '../authentication/authcontext';\nimport Recorder from './recorder';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction OptionSelect(props) {\n  _s();\n\n  const options = props.Options;\n  const [activeOptions, setActiveOptions] = useState([]);\n  const fieldValues = props.fieldValues;\n  const setFieldValues = props.setFieldValues;\n  const multiSelect = props.multiSelect;\n  const required = props.required;\n\n  const handleClick = e => {\n    if (!!multiSelect) {\n      if (!!!activeOptions.includes(e.target.name)) {\n        setActiveOptions(prevActiveOptions => [...prevActiveOptions, e.target.name]);\n      } else {\n        setActiveOptions(prevActiveOptions => prevActiveOptions.filter(value => value !== e.target.name));\n      }\n    } else {\n      setActiveOptions(e.target.name);\n    }\n  };\n\n  useEffect(() => {\n    // Due to the nature of setState of react, the update function has to be called here\n    setFieldValues({ ...fieldValues,\n      [props.name]: activeOptions\n    });\n    console.log(activeOptions);\n  }, [activeOptions]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: !!options && options.map((option, index) => {\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-outline-primary col border rounded my-2 mx-1 text-center\",\n          ref: e => {\n            if (e) {\n              if (multiSelect ? activeOptions.includes(option.label) : activeOptions == option.label) {\n                e.style.setProperty(\"color\", \"white\", \"important\");\n                e.style.setProperty(\"background-color\", \"black\", \"important\");\n              } else {\n                e.style.setProperty(\"color\", \"\", \"\");\n                e.style.setProperty(\"background-color\", \"\", \"\");\n              }\n            }\n          },\n          type: \"button\",\n          onClick: handleClick,\n          name: option.label,\n          children: option.label\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n\n_s(OptionSelect, \"g0G6p5s5l+AaegAtJWyk8+9Lkc0=\");\n\n_c = OptionSelect;\n\nfunction DropdownSelect(props) {\n  _s2();\n\n  const [currentOption, setCurrentOption] = useState([]);\n  const fieldValues = props.fieldValues;\n  const setFieldValues = props.setFieldValues;\n\n  const handleSelect = e => {\n    if (!!!currentOption.includes(e.target.name)) {\n      setCurrentOption(prevActiveOptions => [...prevActiveOptions, e.target.name]);\n    } else {\n      setCurrentOption(prevActiveOptions => prevActiveOptions.filter(value => value !== e.target.name));\n    }\n  };\n\n  let options;\n\n  if (!!props.Options) {\n    options = props.Options;\n  }\n\n  useEffect(() => {\n    setFieldValues({ ...fieldValues,\n      [props.name]: currentOption\n    });\n  }, [currentOption]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dropdown\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-light w-100 dropdown-toggle shadow-sm\",\n      type: \"button\",\n      id: props.key,\n      \"data-bs-toggle\": \"dropdown\",\n      \"aria-expanded\": \"false\",\n      children: currentOption + \" \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"dropdown-menu w-50\",\n      \"aria-labelledby\": props.key,\n      children: !!options && options.map((option, index) => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-100 d-flex\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"dropdown-item w-25\",\n              type: \"checkbox\",\n              name: option.label,\n              onClick: handleSelect\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"\",\n              children: option.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 33\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(DropdownSelect, \"jKZ+cFs7WhQVO8If3SdDMSz78qs=\");\n\n_c2 = DropdownSelect;\n\nfunction PopupSelect(props) {\n  _s3();\n\n  const [currentOption, setCurrentOption] = useState(\"\");\n  const [clients, setClients] = useState([]);\n  const API = props.API;\n  const fieldValues = props.fieldValues;\n  const setFieldValues = props.setFieldValues;\n  const [AuthState, setAuthState] = useAuthState();\n  const required = props.required;\n\n  const handleClick = e => {\n    setCurrentOption(e.target.name);\n  };\n\n  const handleAddNew = e => {\n    if (searchBarText !== undefined && !!(searchBarText.replaceAll(' ', '').length > 0)) setCurrentOption(searchBarText);\n  };\n\n  useEffect(() => {\n    setFieldValues({ ...fieldValues,\n      [props.name]: currentOption\n    });\n  }, [currentOption]);\n  useEffect(() => {\n    if (!!API) {\n      fetch(API, {\n        method: \"POST\",\n        credentials: \"include\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(AuthState)\n      }).then(res => {\n        if (res.ok) {\n          return res.json();\n        }\n      }).then(data => {\n        setClients(data);\n      }).catch(error => {\n        console.log(error);\n        throw new Error(error);\n      });\n    }\n  }, []); // Search Bar\n\n  const [rawData, setRawData] = useState([]);\n  useEffect(() => {\n    setRawData(clients);\n  }, [clients]);\n  const [searchBarText, setSearchBarText] = useState();\n  const [filteredData, setFilteredData] = useState();\n  useEffect(() => {\n    setFilteredData(rawData);\n  }, [rawData]);\n\n  const handleSearchBarChange = e => {\n    setSearchBarText(e.target.value);\n  };\n\n  useEffect(() => {\n    setFilteredData(rawData.filter(datum => datum.includes(searchBarText)));\n  }, [searchBarText]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"w-100 bg-light form-control shadow-sm border rounded\",\n      type: \"button\",\n      \"data-bs-toggle\": \"modal\",\n      \"data-bs-target\": \"#\" + props.name,\n      children: currentOption === \"\" ? \"選擇\" : currentOption\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal fade position-absolute\",\n      tabIndex: \"-1\",\n      id: props.name,\n      \"aria-labelledby\": \"modalTitle\",\n      \"aria-hidden\": \"true\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-dialog\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"modal-title text-dark\",\n              id: \"modalTitle\",\n              children: props.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn-close\",\n              \"data-bs-dismiss\": \"modal\",\n              \"aria-label\": \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-body container overflow-auto\",\n            style: {\n              maxHeight: \"300px\"\n            },\n            children: !!(filteredData !== undefined) && filteredData.map((client, index) => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"col border btn btn-outline-primary my-2\",\n                  onClick: handleClick,\n                  type: \"button\",\n                  name: client,\n                  \"data-bs-dismiss\": \"modal\",\n                  children: client\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 45\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 41\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-footer\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control shadow-sm border rounded\",\n              onChange: handleSearchBarChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-dark\",\n              type: \"button\",\n              onClick: handleAddNew,\n              \"data-bs-dismiss\": \"modal\",\n              children: \"\\u65B0\\u589E\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 191,\n    columnNumber: 9\n  }, this);\n}\n\n_s3(PopupSelect, \"CQ2ahHlO7aRdn00f04RlbzL2my8=\", false, function () {\n  return [useAuthState];\n});\n\n_c3 = PopupSelect;\nexport default function Form(props) {\n  _s4();\n\n  const dismissModal = props.dismissModal;\n  const fieldsArray = props.fieldsArray;\n  const API = props.API;\n  const defaultValues = props.defaultValues || {};\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [fieldValues, setFieldValues] = useState(defaultValues);\n  const [submitting, setSubmitting] = useState(false);\n  const afterSubmit = props.afterSubmit;\n  const redirectAfterSubmit = props.redirectAfterSubmit;\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n\n    for (let field of fieldsArray) {\n      if (field.required !== undefined) {\n        if (field.required === true) {\n          let found = false;\n          Object.keys(fieldValues).map(function (key, item) {\n            if (key === field.key && fieldValues[key].length > 0) found = true;\n          });\n\n          if (!found) {\n            alert(\"請輸入 \" + field.label);\n            return;\n          }\n        }\n      }\n    }\n\n    setSubmitting(true);\n    const newData = { ...fieldValues\n    };\n    await fetch(API, {\n      method: \"POST\",\n      credentials: \"include\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newData)\n    }).then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n    }).then(res => {\n      if (res.status === \"success\") {\n        alert(res.message);\n      } else {\n        alert(res.message);\n      }\n\n      if (afterSubmit !== undefined) {\n        afterSubmit();\n      }\n\n      if (redirectAfterSubmit !== undefined) {\n        if (redirectAfterSubmit === true) {\n          navigate(\"/dashboard\");\n        }\n      }\n    }).catch(error => {\n      window.alert(error);\n      return;\n    }); // Todos post item to backend server\n  }\n\n  function handleChange(event) {\n    setFieldValues({ ...fieldValues,\n      [event.target.name]: event.target.value\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-100 d-flex justify-content-center\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"w-100 d-inline-flex justify-content-center flex-column flex-direction-column align-items-center\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border px-3 pb-3 pb-4 mt-3 rounded w-90\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-100 form-group d-inline-flex flex-column justify-content-center\",\n          children: !!fieldsArray && fieldsArray.map((field, index) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex flex-column justify-content-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"mt-3\",\n                children: field.label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 326,\n                columnNumber: 45\n              }, this), {\n                // Special cases\n                \"profit\": /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"form-control shadow-sm border rounded\",\n                  name: field.key,\n                  type: field.type,\n                  onChange: handleChange,\n                  readOnly: fieldValues.item === undefined ? true : !fieldValues.item.includes(\"Done Deal\"),\n                  required: true,\n                  min: 0\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 332,\n                  columnNumber: 57\n                }, this)\n              }[field.key] || {\n                // Todos other input options \n                \"popupSelect\": /*#__PURE__*/_jsxDEV(PopupSelect, {\n                  name: field.key,\n                  fieldValues: fieldValues,\n                  setFieldValues: setFieldValues,\n                  API: field.API,\n                  ...field\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 345,\n                  columnNumber: 57\n                }, this),\n                \"dropdownSelect\": /*#__PURE__*/_jsxDEV(Select, {\n                  className: \"text-black\",\n                  options: field.Options,\n                  name: field.key,\n                  fieldValues: fieldValues,\n                  onChange: e => {\n                    // Reverse engineer react-select to fit our codes\n                    const parseValue = {\n                      target: {}\n                    };\n                    parseValue.target.name = field.key;\n\n                    if (field.multiSelect) {\n                      parseValue.target.value = [];\n\n                      for (let option of e) {\n                        parseValue.target.value = [...parseValue.target.value, option.value];\n                      }\n                    } else {\n                      parseValue.target.value = e.value;\n                    }\n\n                    handleChange(parseValue);\n                  },\n                  isMulti: field.multiSelect,\n                  ...field\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 352,\n                  columnNumber: 57\n                }, this),\n                \"optionSelect\": /*#__PURE__*/_jsxDEV(OptionSelect, {\n                  name: field.key,\n                  fieldValues: fieldValues,\n                  setFieldValues: setFieldValues,\n                  multiSelect: field.multiSelect,\n                  ...field\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 376,\n                  columnNumber: 57\n                }, this),\n                \"textarea\": /*#__PURE__*/_jsxDEV(\"textarea\", {\n                  className: \"form-control shadow-sm border rounded\",\n                  name: field.key,\n                  type: field.type,\n                  onChange: handleChange,\n                  required: field.required\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 383,\n                  columnNumber: 57\n                }, this),\n                \"Record\": /*#__PURE__*/_jsxDEV(Recorder, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 389,\n                  columnNumber: 66\n                }, this)\n              }[field.type] || /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"form-control shadow-sm border rounded\",\n                name: field.key,\n                type: field.type,\n                onChange: handleChange,\n                required: field.required\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 391,\n                columnNumber: 49\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 41\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-90 container mt-3\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"col btn btn-outline-light me-1\",\n            type: \"button\",\n            onClick: () => {\n              navigate(\"/dashboard\");\n            },\n            children: \"\\u53D6\\u6D88\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"col btn btn-light ms-1\",\n            type: \"submit\",\n            value: \"\\u905E\\u4EA4\",\n            disabled: submitting,\n            \"data-bs-dismiss\": dismissModal !== undefined ? \"modal\" : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 313,\n    columnNumber: 9\n  }, this);\n}\n\n_s4(Form, \"QIjNQWHHS2LejKIoljHo43Zcutg=\", false, function () {\n  return [useNavigate, useLocation];\n});\n\n_c4 = Form;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"OptionSelect\");\n$RefreshReg$(_c2, \"DropdownSelect\");\n$RefreshReg$(_c3, \"PopupSelect\");\n$RefreshReg$(_c4, \"Form\");","map":{"version":3,"sources":["C:/Users/Michael/Documents/GitHub/fromagent/client/src/components/form.jsx"],"names":["React","useState","useEffect","useNavigate","useLocation","Select","useAuthState","Recorder","OptionSelect","props","options","Options","activeOptions","setActiveOptions","fieldValues","setFieldValues","multiSelect","required","handleClick","e","includes","target","name","prevActiveOptions","filter","value","console","log","map","option","index","label","style","setProperty","DropdownSelect","currentOption","setCurrentOption","handleSelect","key","PopupSelect","clients","setClients","API","AuthState","setAuthState","handleAddNew","searchBarText","undefined","replaceAll","length","fetch","method","credentials","headers","body","JSON","stringify","then","res","ok","json","data","catch","error","Error","rawData","setRawData","setSearchBarText","filteredData","setFilteredData","handleSearchBarChange","datum","maxHeight","client","Form","dismissModal","fieldsArray","defaultValues","navigate","location","submitting","setSubmitting","afterSubmit","redirectAfterSubmit","handleSubmit","event","preventDefault","field","found","Object","keys","item","alert","newData","response","status","message","window","handleChange","type","parseValue"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router';\r\nimport Select from 'react-select';\r\nimport { useAuthState } from '../authentication/authcontext';\r\nimport Recorder from './recorder';\r\n\r\nfunction OptionSelect(props) {\r\n    const options = props.Options;\r\n    const [activeOptions, setActiveOptions] = useState([]);\r\n    const fieldValues = props.fieldValues;\r\n    const setFieldValues = props.setFieldValues;\r\n    const multiSelect = props.multiSelect;\r\n    const required = props.required;\r\n\r\n    const handleClick = (e) => {\r\n        if (!!multiSelect) {\r\n            if (!!!activeOptions.includes(e.target.name)) {\r\n                setActiveOptions((prevActiveOptions) => [...prevActiveOptions, e.target.name]);\r\n\r\n            } else {\r\n                setActiveOptions((prevActiveOptions) => prevActiveOptions.filter(value => value !== e.target.name));\r\n            }\r\n        } else {\r\n            setActiveOptions(e.target.name);\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        // Due to the nature of setState of react, the update function has to be called here\r\n        setFieldValues({ ...fieldValues, [props.name]: activeOptions })\r\n        console.log(activeOptions);\r\n    }, [activeOptions]);\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                {\r\n                    !!options &&\r\n                    options.map((option, index) => {\r\n                        return (\r\n                            <button key={index}\r\n                                className={\r\n                                    \"btn btn-outline-primary col border rounded my-2 mx-1 text-center\"\r\n                                }\r\n\r\n                                ref={(e) => {\r\n                                    if (e) {\r\n                                        if (multiSelect ? activeOptions.includes(option.label) : activeOptions == option.label) {\r\n                                            e.style.setProperty(\"color\", \"white\", \"important\");\r\n                                            e.style.setProperty(\"background-color\", \"black\", \"important\");\r\n                                        } else {\r\n                                            e.style.setProperty(\"color\", \"\", \"\");\r\n                                            e.style.setProperty(\"background-color\", \"\", \"\");\r\n                                        }\r\n                                    }\r\n                                }}\r\n                                type=\"button\"\r\n                                onClick={handleClick}\r\n                                name={option.label}\r\n                            >\r\n                                {option.label}\r\n                            </button>\r\n                        );\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction DropdownSelect(props) {\r\n    const [currentOption, setCurrentOption] = useState([]);\r\n\r\n    const fieldValues = props.fieldValues;\r\n    const setFieldValues = props.setFieldValues;\r\n\r\n    const handleSelect = (e) => {\r\n        if (!!!currentOption.includes(e.target.name)) {\r\n            setCurrentOption((prevActiveOptions) => [...prevActiveOptions, e.target.name]);\r\n\r\n        } else {\r\n            setCurrentOption((prevActiveOptions) => prevActiveOptions.filter(value => value !== e.target.name));\r\n        }\r\n    }\r\n    let options;\r\n    if (!!props.Options) {\r\n        options = props.Options;\r\n    }\r\n    useEffect(() => {\r\n        setFieldValues({ ...fieldValues, [props.name]: currentOption });\r\n    }, [currentOption]);\r\n\r\n    return (\r\n        <div className='dropdown'>\r\n            <button className=\"btn btn-light w-100 dropdown-toggle shadow-sm\" type=\"button\" id={props.key} data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                {currentOption + \" \"}\r\n            </button>\r\n            <ul className=\"dropdown-menu w-50\" aria-labelledby={props.key}>\r\n                {\r\n                    !!options &&\r\n                    options.map((option, index) => {\r\n                        return (\r\n                            <li key={index}>\r\n                                <div className=\"w-100 d-flex\">\r\n                                    <input className=\"dropdown-item w-25\" type=\"checkbox\" name={option.label} onClick={handleSelect} />\r\n                                    <span className=\"\">{option.label}</span>\r\n                                </div>\r\n                            </li>\r\n                        );\r\n                    })\r\n                }\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction PopupSelect(props) {\r\n\r\n    const [currentOption, setCurrentOption] = useState(\"\");\r\n    const [clients, setClients] = useState([]);\r\n    const API = props.API;\r\n    const fieldValues = props.fieldValues;\r\n    const setFieldValues = props.setFieldValues;\r\n    const [AuthState, setAuthState] = useAuthState();\r\n    const required = props.required;\r\n\r\n    const handleClick = (e) => {\r\n        setCurrentOption(e.target.name);\r\n    }\r\n\r\n    const handleAddNew = (e) => {\r\n        if (searchBarText !== undefined && !!(searchBarText.replaceAll(' ', '').length > 0))\r\n            setCurrentOption(searchBarText);\r\n    }\r\n\r\n    useEffect(() => {\r\n        setFieldValues({ ...fieldValues, [props.name]: currentOption });\r\n    }, [currentOption]);\r\n\r\n    useEffect(() => {\r\n        if (!!API) {\r\n            fetch(API, {\r\n                method: \"POST\",\r\n                credentials: \"include\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify(AuthState)\r\n            })\r\n                .then(\r\n                    (res) => {\r\n                        if (res.ok) {\r\n                            return (res.json());\r\n                        }\r\n                    }\r\n                )\r\n                .then(\r\n                    (data) => {\r\n                        setClients(data);\r\n                    }\r\n                )\r\n                .catch(\r\n                    (error) => {\r\n                        console.log(error);\r\n                        throw new Error(error);\r\n                    }\r\n                )\r\n        }\r\n    }, []);\r\n\r\n    // Search Bar\r\n\r\n    const [rawData, setRawData] = useState([]);\r\n    useEffect(() => {\r\n        setRawData(clients);\r\n    }, [clients]);\r\n    const [searchBarText, setSearchBarText] = useState();\r\n    const [filteredData, setFilteredData] = useState();\r\n    useEffect(() => { setFilteredData(rawData) }, [rawData]);\r\n    const handleSearchBarChange = (e) => {\r\n        setSearchBarText(e.target.value);\r\n    }\r\n\r\n    useEffect(() => {\r\n        setFilteredData(rawData.filter(datum => datum.includes(searchBarText)));\r\n    }, [searchBarText]);\r\n\r\n    return (\r\n        <div>\r\n            <button\r\n                className='w-100 bg-light form-control shadow-sm border rounded'\r\n                type=\"button\"\r\n                data-bs-toggle=\"modal\"\r\n                data-bs-target={\"#\" + props.name}\r\n            >\r\n                {currentOption === \"\" ? \"選擇\" : currentOption}\r\n            </button>\r\n            <div className='modal fade position-absolute' tabIndex=\"-1\" id={props.name} aria-labelledby='modalTitle' aria-hidden=\"true\">\r\n                <div className=\"modal-dialog\">\r\n                    <div className='modal-content'>\r\n                        <div className='modal-header'>\r\n                            <div className='modal-title text-dark' id=\"modalTitle\">{props.label}</div>\r\n                            <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n                        </div>\r\n                        <div className='modal-body container overflow-auto' style={{ maxHeight: \"300px\" }}>\r\n                            {!!(filteredData !== undefined) &&\r\n                                filteredData.map((client, index) => {\r\n                                    return (\r\n                                        <div className='row' key={index}>\r\n                                            <button\r\n                                                className=\"col border btn btn-outline-primary my-2\"\r\n                                                onClick={handleClick}\r\n                                                type=\"button\"\r\n                                                name={client}\r\n                                                data-bs-dismiss=\"modal\"\r\n                                            >\r\n                                                {client}\r\n                                            </button>\r\n                                        </div>\r\n                                    );\r\n                                })\r\n                            }\r\n                        </div>\r\n                        <div className=\"modal-footer\">\r\n                            <input className=\"form-control shadow-sm border rounded\" onChange={handleSearchBarChange} />\r\n                            <button className=\"btn btn-dark\" type=\"button\" onClick={handleAddNew} data-bs-dismiss=\"modal\">新增</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default function Form(props) {\r\n    const dismissModal = props.dismissModal;\r\n    const fieldsArray = props.fieldsArray;\r\n    const API = props.API;\r\n    const defaultValues = props.defaultValues || {};\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    const [fieldValues, setFieldValues] = useState(defaultValues);\r\n    const [submitting, setSubmitting] = useState(false);\r\n    const afterSubmit = props.afterSubmit;\r\n    const redirectAfterSubmit = props.redirectAfterSubmit;\r\n    async function handleSubmit(event) {\r\n        event.preventDefault();\r\n        for (let field of fieldsArray) {\r\n            if (field.required !== undefined) {\r\n                if (field.required === true) {\r\n                    let found = false;\r\n                    Object.keys(fieldValues).map(function (key, item) {\r\n                        if (key === field.key &&\r\n                            fieldValues[key].length > 0)\r\n                            found = true;\r\n                    })\r\n                    if (!found) {\r\n                        alert(\"請輸入 \" + field.label)\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        setSubmitting(true);\r\n        const newData = { ...fieldValues };\r\n        await fetch(API, {\r\n            method: \"POST\",\r\n            credentials: \"include\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(newData),\r\n        })\r\n            .then(\r\n                response => {\r\n                    if (response.ok) {\r\n                        return response.json()\r\n                    }\r\n                }\r\n            )\r\n            .then(\r\n                res => {\r\n                    if (res.status === \"success\") {\r\n                        alert(res.message);\r\n                    } else {\r\n                        alert(res.message);\r\n                    }\r\n                    if (afterSubmit !== undefined) { afterSubmit(); }\r\n                    if (redirectAfterSubmit !== undefined) {\r\n                        if (redirectAfterSubmit === true) {\r\n                            navigate(\"/dashboard\");\r\n                        }\r\n                    }\r\n                }\r\n            )\r\n            .catch(\r\n                error => {\r\n                    window.alert(error);\r\n                    return;\r\n                }\r\n            )\r\n\r\n        // Todos post item to backend server\r\n    }\r\n\r\n    function handleChange(event) {\r\n        setFieldValues({ ...fieldValues, [event.target.name]: event.target.value });\r\n    }\r\n\r\n    return (\r\n        <div className=\"w-100 d-flex justify-content-center\">\r\n            <form className='w-100 d-inline-flex justify-content-center flex-column flex-direction-column align-items-center'\r\n                onSubmit={handleSubmit}\r\n            >\r\n                <div className=\"border px-3 pb-3 pb-4 mt-3 rounded w-90\">\r\n                    <div className='w-100 form-group d-inline-flex flex-column justify-content-center'>\r\n                        {\r\n                            (!!fieldsArray) &&\r\n                            fieldsArray.map(\r\n                                (field, index) => {\r\n\r\n                                    return (\r\n                                        <div className='d-flex flex-column justify-content-center' key={index}>\r\n                                            <label className=\"mt-3\">{field.label}</label>\r\n\r\n                                            {\r\n                                                {\r\n                                                    // Special cases\r\n                                                    \"profit\":\r\n                                                        <input\r\n                                                            className={\"form-control shadow-sm border rounded\"}\r\n                                                            name={field.key}\r\n                                                            type={field.type}\r\n                                                            onChange={handleChange}\r\n                                                            readOnly={fieldValues.item === undefined ? true : !(fieldValues.item.includes(\"Done Deal\"))}\r\n                                                            required={true}\r\n                                                            min={0}\r\n                                                        />\r\n                                                }\r\n                                                [field.key] || {\r\n                                                    // Todos other input options \r\n                                                    \"popupSelect\":\r\n                                                        <PopupSelect\r\n                                                            name={field.key}\r\n                                                            fieldValues={fieldValues}\r\n                                                            setFieldValues={setFieldValues}\r\n                                                            API={field.API}\r\n                                                            {...field} />,\r\n                                                    \"dropdownSelect\":\r\n                                                        <Select\r\n                                                            className='text-black'\r\n                                                            options={field.Options}\r\n                                                            name={field.key}\r\n                                                            fieldValues={fieldValues}\r\n                                                            onChange={(e) => {\r\n                                                                // Reverse engineer react-select to fit our codes\r\n                                                                const parseValue = { target: {} };\r\n                                                                parseValue.target.name = field.key;\r\n\r\n                                                                if (field.multiSelect) {\r\n                                                                    parseValue.target.value = [];\r\n                                                                    for (let option of e) {\r\n                                                                        parseValue.target.value = [...parseValue.target.value, option.value];\r\n                                                                    }\r\n                                                                } else {\r\n                                                                    parseValue.target.value = e.value;\r\n                                                                }\r\n\r\n                                                                handleChange(parseValue)\r\n                                                            }}\r\n                                                            isMulti={field.multiSelect}\r\n                                                            {...field} />,\r\n                                                    \"optionSelect\":\r\n                                                        <OptionSelect\r\n                                                            name={field.key}\r\n                                                            fieldValues={fieldValues}\r\n                                                            setFieldValues={setFieldValues}\r\n                                                            multiSelect={field.multiSelect}\r\n                                                            {...field} />,\r\n                                                    \"textarea\":\r\n                                                        <textarea className=\"form-control shadow-sm border rounded\"\r\n                                                            name={field.key}\r\n                                                            type={field.type}\r\n                                                            onChange={handleChange}\r\n                                                            required={field.required}\r\n                                                        />,\r\n                                                        \"Record\":<Recorder/>\r\n                                                }[field.type] ||\r\n                                                <input className=\"form-control shadow-sm border rounded\"\r\n                                                    name={field.key}\r\n                                                    type={field.type}\r\n                                                    onChange={handleChange}\r\n                                                    required={field.required}\r\n                                                />\r\n                                            }\r\n                                        </div>\r\n                                    );\r\n                                }\r\n                            )\r\n                        }\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='w-90 container mt-3'>\r\n                    <div className='row'>\r\n                        <button className='col btn btn-outline-light me-1' type=\"button\" onClick={() => { navigate(\"/dashboard\") }}>取消</button>\r\n                        <input className='col btn btn-light ms-1' type='submit' value=\"遞交\" disabled={submitting} data-bs-dismiss={dismissModal !== undefined ? \"modal\" : \"\"} />\r\n                    </div>\r\n                </div>\r\n\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}