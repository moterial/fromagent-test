[{"C:\\Users\\Michael\\Documents\\GitHub\\fromagent\\client\\src\\index.js":"1","C:\\Users\\Michael\\Documents\\GitHub\\fromagent\\client\\src\\App.js":"2","C:\\Users\\Michael\\Documents\\GitHub\\fromagent\\client\\src\\reportWebVitals.js":"3","C:\\Users\\Michael\\Documents\\GitHub\\fromagent\\client\\src\\serviceWorkerRegistration.js":"4","C:\\Users\\Michael\\Documents\\GitHub\\fromagent\\client\\src\\consts\\api.const.js":"5","C:\\Users\\Michael\\Documents\\GitHub\\fromagent\\client\\src\\context\\socket.js":"6","C:\\Users\\Michael\\Documents\\GitHub\\fromagent\\client\\src\\router.jsx":"7","C:\\Users\\Michael\\Documents\\GitHub\\fromagent\\client\\src\\authentication\\authcontext.jsx":"8","C:\\Users\\Michael\\Documents\\GitHub\\fromagent\\client\\src\\consts\\pages.const.js":"9","C:\\Users\\Michael\\Documents\\GitHub\\fromagent\\client\\src\\pages\\login.jsx":"10","C:\\Users\\Michael\\Documents\\GitHub\\fromagent\\client\\src\\components\\footer.jsx":"11","C:\\Users\\Michael\\Documents\\GitHub\\fromagent\\client\\src\\pages\\candidateList.jsx":"12","C:\\Users\\Michael\\Documents\\GitHub\\fromagent\\client\\src\\pages\\dashboard.jsx":"13","C:\\Users\\Michael\\Documents\\GitHub\\fromagent\\client\\src\\pages\\meetingList.jsx":"14","C:\\Users\\Michael\\Documents\\GitHub\\fromagent\\client\\src\\pages\\addcandidate.jsx":"15","C:\\Users\\Michael\\Documents\\GitHub\\fromagent\\client\\src\\pages\\addrecord.jsx":"16","C:\\Users\\Michael\\Documents\\GitHub\\fromagent\\client\\src\\pages\\settings.jsx":"17","C:\\Users\\Michael\\Documents\\GitHub\\fromagent\\client\\src\\pages\\yearlytarget.jsx":"18","C:\\Users\\Michael\\Documents\\GitHub\\fromagent\\client\\src\\consts\\candidatemeeting.const.js":"19","C:\\Users\\Michael\\Documents\\GitHub\\fromagent\\client\\src\\components\\form.jsx":"20","C:\\Users\\Michael\\Documents\\GitHub\\fromagent\\client\\src\\consts\\candidates.const.js":"21","C:\\Users\\Michael\\Documents\\GitHub\\fromagent\\client\\src\\pages\\usermanagement.jsx":"22","C:\\Users\\Michael\\Documents\\GitHub\\fromagent\\client\\src\\consts\\meeting.const.js":"23","C:\\Users\\Michael\\Documents\\GitHub\\fromagent\\client\\src\\consts\\meetings.const.js":"24","C:\\Users\\Michael\\Documents\\GitHub\\fromagent\\client\\src\\pages\\forgetpw.jsx":"25"},{"size":1394,"mtime":1649611477441,"results":"26","hashOfConfig":"27"},{"size":663,"mtime":1649562565242,"results":"28","hashOfConfig":"27"},{"size":375,"mtime":1649562565251,"results":"29","hashOfConfig":"27"},{"size":5201,"mtime":1649562565252,"results":"30","hashOfConfig":"27"},{"size":3016,"mtime":1665074091429,"results":"31","hashOfConfig":"27"},{"size":176,"mtime":1649562565247,"results":"32","hashOfConfig":"27"},{"size":2149,"mtime":1665041491050,"results":"33","hashOfConfig":"27"},{"size":1259,"mtime":1665041275238,"results":"34","hashOfConfig":"27"},{"size":1203,"mtime":1663839248554,"results":"35","hashOfConfig":"27"},{"size":4888,"mtime":1665041491047,"results":"36","hashOfConfig":"27"},{"size":2236,"mtime":1665041275241,"results":"37","hashOfConfig":"27"},{"size":24671,"mtime":1665041275249,"results":"38","hashOfConfig":"27"},{"size":49888,"mtime":1665075101971,"results":"39","hashOfConfig":"27"},{"size":25005,"mtime":1665041275251,"results":"40","hashOfConfig":"27"},{"size":654,"mtime":1649562565248,"results":"41","hashOfConfig":"27"},{"size":620,"mtime":1649562565249,"results":"42","hashOfConfig":"27"},{"size":14892,"mtime":1665041491048,"results":"43","hashOfConfig":"27"},{"size":2085,"mtime":1665041275261,"results":"44","hashOfConfig":"27"},{"size":943,"mtime":1665041275247,"results":"45","hashOfConfig":"27"},{"size":19004,"mtime":1665041491043,"results":"46","hashOfConfig":"27"},{"size":2422,"mtime":1665041275247,"results":"47","hashOfConfig":"27"},{"size":16754,"mtime":1665041491049,"results":"48","hashOfConfig":"27"},{"size":1039,"mtime":1665041275248,"results":"49","hashOfConfig":"27"},{"size":2716,"mtime":1665041491044,"results":"50","hashOfConfig":"27"},{"size":7470,"mtime":1665041491046,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"56"},"f02p1i",{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"56"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"56"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"56"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"56"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"56"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Michael\\Documents\\GitHub\\fromagent\\client\\src\\index.js",["134","135","136"],[],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {SocketContext, socket} from './context/socket';\r\nimport { GAPI_GET_USER_TOKEN } from './consts/api.const';\r\n\r\n\r\n//add loading effect to every fetch\r\nconst _fetch = window.fetch\r\nvar timeout;\r\n\r\nwindow.fetch = function(...args) {\r\n  \r\n  timeout = setTimeout(function(){\r\n\tdocument.getElementById('loading').style.display=\"block\";\r\n  }, 500);\r\n\r\n  return Promise.resolve(_fetch.apply(window, args))\r\n    .then(resp => {\r\n      document.getElementById('loading').style.display=\"none\";\r\n\t    clearTimeout(timeout);\r\n\r\n      return resp;\r\n    })\r\n}\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorkerRegistration.register();\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",["137","138"],"C:\\Users\\Michael\\Documents\\GitHub\\fromagent\\client\\src\\App.js",[],[],"C:\\Users\\Michael\\Documents\\GitHub\\fromagent\\client\\src\\reportWebVitals.js",[],[],"C:\\Users\\Michael\\Documents\\GitHub\\fromagent\\client\\src\\serviceWorkerRegistration.js",[],[],"C:\\Users\\Michael\\Documents\\GitHub\\fromagent\\client\\src\\consts\\api.const.js",[],[],"C:\\Users\\Michael\\Documents\\GitHub\\fromagent\\client\\src\\context\\socket.js",[],[],"C:\\Users\\Michael\\Documents\\GitHub\\fromagent\\client\\src\\router.jsx",["139","140","141","142","143"],[],"C:\\Users\\Michael\\Documents\\GitHub\\fromagent\\client\\src\\authentication\\authcontext.jsx",[],[],"C:\\Users\\Michael\\Documents\\GitHub\\fromagent\\client\\src\\consts\\pages.const.js",[],[],"C:\\Users\\Michael\\Documents\\GitHub\\fromagent\\client\\src\\pages\\login.jsx",["144","145","146","147","148","149"],[],"C:\\Users\\Michael\\Documents\\GitHub\\fromagent\\client\\src\\components\\footer.jsx",["150"],[],"import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nconst footerItems = [\r\n    {\r\n        title: \"今天事項\",\r\n        link: \"/dashboard\",\r\n        image: \"bi bi-list-stars\",\r\n    },\r\n\t{\r\n        title: \"見客記錄\",\r\n        link: \"/addrecord\",\r\n        image: \"bi bi-person-check-fill\",\r\n    },\r\n    {\r\n        title: \"客戶列表\",\r\n        link: \"/meetinglist\",\r\n        image: \"bi bi-person-lines-fill\",\r\n    },\r\n    {\r\n        title: \"求職記錄\",\r\n        link: \"/addcandidate\",\r\n        image: \"bi bi-clipboard2-heart\",\r\n    },\r\n    {\r\n        title: \"求職者列表\",\r\n        link: \"/candidatelist\",\r\n        image: \"bi bi-clipboard2-data\"\r\n    },\r\n    {\r\n        title: \"設定\",\r\n        link: \"/settings\",\r\n        image: \"bi bi-gear\",\r\n    }\r\n]\r\n\r\nexport default function Footer(props) {\r\n\r\n    let location = useLocation();\r\n\r\n    return (\r\n        <div className='w-100  fixed-bottom shadow-lg bg-black rounded'\r\n            style={{ height: \"80px\" }}>\r\n            <div className='w-100 d-flex flex-row justify-content-around'>\r\n                {\r\n                    footerItems.map((item, index) => {\r\n                        return (\r\n                            <div className='p-2 m-20 h-100' key={index}>\r\n                                <Link className='d-inline-flex flex-column justify-content-center align-items-center rounded' \r\n                                style={location.pathname.includes (item.link) ? {\r\n                                    color: '#727272',\r\n                                    textDecoration: 'none',\r\n                                }: {\r\n                                    color: 'white',\r\n                                    textDecoration: 'none',\r\n                                }}\r\n                                to={item.link}>\r\n                                    <div className={item.image} style={{fontSize:\"30px\"}}/>\r\n                                    <small>{item.title}</small>\r\n                                </Link>\r\n                            </div>\r\n                        );\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\Michael\\Documents\\GitHub\\fromagent\\client\\src\\pages\\candidateList.jsx",["151","152","153","154","155","156","157"],[],"import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport { Route, Routes, NavLink, useParams } from 'react-router-dom';\r\nimport { displayMeetingFields } from '../consts/candidatemeeting.const.js';\r\nimport { CANDIDATES_INTERVIEW_LIST_PATH, CANDIDATES_DELETE_INTERVIEWS_PATH, DELETE_CANDIDATES_PATH, CANDIDATES_CHANGE_NAME_PATH } from '../consts/api.const';\r\nimport { useAuthState } from '../authentication/authcontext.jsx';\r\n\r\nfunction ChangeNameModal(props) {\r\n    const updateValue = props.updateValue;\r\n    const [AuthState, setAuthState] = useAuthState();\r\n    const [newName, setNewName] = useState();\r\n    const candidateID = useParams().itemID;\r\n    const handleChange = (e) => {\r\n        setNewName(e.target.value);\r\n    }\r\n    const changeName = (e) => {\r\n        fetch(CANDIDATES_CHANGE_NAME_PATH, {\r\n            method: \"POST\",\r\n            credentials: \"include\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                user: JSON.stringify(AuthState),\r\n                candidate: {\r\n                    candidateID: candidateID,\r\n                    candidateNewName: newName\r\n                }\r\n            })\r\n        })\r\n            .then(res => {\r\n                if (res.ok) {\r\n                    return (res.json())\r\n                }\r\n            })\r\n            .then(\r\n                json => {\r\n                    alert(json.status + \"\\n\" + json.message);\r\n                    updateValue();\r\n                }\r\n            )\r\n            .catch(\r\n                error => {\r\n                    alert(error);\r\n                }\r\n            )\r\n    }\r\n\r\n    return (\r\n        <div className='modal fade' tabIndex=\"-1\" id=\"changeName\" aria-labelledby='modalTitle' aria-hidden=\"true\">\r\n            <div className=\"modal-dialog\">\r\n                <div className='modal-content'>\r\n                    <div className='modal-header'>\r\n                        <div className='modal-title text-dark' id=\"modalTitle\">新名字</div>\r\n                        <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n                    </div>\r\n                    <div className='modal-body text-dark'>\r\n                        <input className=\"w-100\" onChange={handleChange} />\r\n                    </div>\r\n                    <div className='modal-footer'>\r\n                        <button type=\"button\" className=\"btn btn-dark\" data-bs-toggle=\"modal\" onClick={changeName} >確定</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction Item(props) {\r\n\r\n    const [editData, setEditData] = useState(false);\r\n    const handleClick = () => {\r\n        setEditData(!editData);\r\n    }\r\n\r\n    const updateValue = props.updateValue;\r\n\r\n    const data = props.data;\r\n\r\n    let itemID = useParams();\r\n\r\n    const item = !!data && data.find(p => p.candidateID === itemID.itemID);\r\n\r\n    //sort\r\n    if (item.interviews.length > 0) {\r\n\r\n\r\n        item.interviews.sort((a, b) => new Date(a.currentDate) <= new Date(b.currentDate) ? 1 : -1)\r\n\r\n    }\r\n\r\n    const deleteInterview = async (e) => {\r\n        if (window.confirm(\"確定刪除已選取的項目嗎？\")) {\r\n            const targetInterview = {\r\n                candidateID: item.candidateID,\r\n                target: e.target.name\r\n            };\r\n            await fetch(CANDIDATES_DELETE_INTERVIEWS_PATH, {\r\n                method: \"DELETE\",\r\n                credentials: \"include\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify(targetInterview)\r\n            })\r\n                .then(\r\n                    (response) => {\r\n                        if (response.ok) {\r\n                            return (response.json());\r\n                        }\r\n                    }\r\n                )\r\n                .then(\r\n                    json => {\r\n                        if (json.status === \"success\") {\r\n                            window.alert(json.message);\r\n                            updateValue();\r\n                        }\r\n                    }\r\n                )\r\n                .catch(\r\n                    error => {\r\n                        window.alert(error);\r\n                    }\r\n                );\r\n        } else {\r\n            return;\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div className='bounceInAnimation d-flex flex-column align-items-center'>\r\n            <ChangeNameModal updateValue={updateValue} />\r\n            <div className=\"w-90 my-3 rounded border\">\r\n                <div className=\"w-100 px-3 py-2 bg-gray\">\r\n                    <small>求職者名稱</small><br />\r\n                    <span style={{ fontSize: \"20px\" }}>\r\n                        {item.candidateName + \" \"}\r\n                        <button className=\"btn btn-dark\" style={{ fontSize: \"10px\" }} type=\"button\" data-bs-toggle=\"modal\" data-bs-target=\"#changeName\">更改名稱</button>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n            <div className='w-90 overflow-auto'>\r\n                <div className='my-1'>相關記錄</div>\r\n                <table className=\"table bg-white\" style={{ minWidth: \"700px\" }}>\r\n                    <thead>\r\n                        <tr>\r\n                            {!!item.interviews &&\r\n                                displayMeetingFields.map((field, index) => {\r\n                                    return (\r\n                                        <th scope=\"col\">{field.label}</th>\r\n                                    );\r\n                                })\r\n                            }\r\n                            <th scope=\"row\">\r\n                                <div className='col d-inline-flex justify-content-end'>\r\n                                    <button className={!!editData ? 'btn btn-dark rounded bi bi-unlock-fill' : 'btn btn-dark rounded bi bi-lock-fill'} onClick={handleClick}></button>\r\n                                </div>\r\n                            </th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {!!item.interviews &&\r\n                            item.interviews.map((interview, index) => {\r\n                                interview.currentDate = new Date(interview.date).toLocaleDateString();\r\n                                interview.next = new Date(interview.nextDate).toLocaleDateString();\r\n\r\n                                return (\r\n                                    <tr style={{ height: \"60px\" }}>\r\n                                        <th scope=\"row\">{interview.currentDate}</th>\r\n                                        <td>{interview.item.join(\"，\")}</td>\r\n                                        <td>{interview.categories.join(\"，\")}</td>\r\n                                        <td>{interview.next}</td>\r\n                                        <td>{interview.score}</td>\r\n                                        {!!editData && <td>\r\n                                            <button className=\"btn btn-light bi bi-trash-fill\" type=\"button\" name={interview._id} onClick={deleteInterview} />\r\n                                        </td>}\r\n                                    </tr>\r\n                                );\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n                <div className=\"w-100 text-end text-white\">總分：{item.mark}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction InterviewList(props) {\r\n    const updateValue = props.updateValue;\r\n    const [editData, setEditData] = useState(false);\r\n    const [deleteList, setDeleteList] = useState([]);\r\n\r\n    const handleClick = () => {\r\n        setEditData(!editData);\r\n    }\r\n\r\n    async function deleteData() {\r\n        const _data = deleteList;\r\n        await fetch(DELETE_CANDIDATES_PATH, {\r\n            method: \"DELETE\",\r\n            credentials: \"include\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(_data)\r\n        })\r\n            .then(\r\n                (response) => {\r\n                    if (response.ok) {\r\n                        return (response.json());\r\n                    }\r\n                }\r\n            )\r\n            .then(\r\n                json => {\r\n                    window.alert(json.status + \" \", json.deleteCount + \" candidates have been deleted.\");\r\n                }\r\n            )\r\n            .catch(\r\n                error => {\r\n                    window.alert(error);\r\n                }\r\n            ).finally(updateValue())\r\n\r\n    }\r\n\r\n    async function deleteItem(e) {\r\n        if (window.confirm(\"確定刪除已選取的項目嗎？\")) {\r\n            const _data = [e.target.name];\r\n            await fetch(DELETE_CANDIDATES_PATH, {\r\n                method: \"DELETE\",\r\n                credentials: \"include\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify(_data)\r\n            })\r\n                .then(\r\n                    (response) => {\r\n                        if (response.ok) {\r\n                            return (response.json());\r\n                        }\r\n                    }\r\n                )\r\n                .then(\r\n                    json => {\r\n                        window.alert(json.status + \" \", json.deleteCount + \" candidates have been deleted.\");\r\n                    }\r\n                )\r\n                .catch(\r\n                    error => {\r\n                        window.alert(error);\r\n                    }\r\n                ).finally(updateValue())\r\n        } else {\r\n            return;\r\n        }\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        if (!!!deleteList.includes(e.target.name)) {\r\n            setDeleteList((prevDeleteList) => [...prevDeleteList, e.target.name]);\r\n\r\n        } else {\r\n            setDeleteList((prevDeleteList) => prevDeleteList.filter(value => value !== e.target.name));\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        setDeleteList(deleteList);\r\n    }, [deleteList])\r\n\r\n    // Search Bar\r\n\r\n    const rawData = props.data;\r\n    const [searchBarText, setSearchBarText] = useState(\"\");\r\n    const [filteredData, setFilteredData] = useState(rawData);\r\n    const handleSearchBarChange = (e) => {\r\n        setSearchBarText(e.target.value);\r\n    }\r\n\r\n    useEffect(() => {\r\n        setFilteredData(rawData.filter(datum => datum.candidateName.includes(searchBarText)));\r\n    }, [searchBarText]);\r\n\r\n    //sort\r\n\tconst defaultToggle = {\r\n        nextDate: false,\r\n        mark: false,\r\n        count: false,\r\n        candidateName: false\r\n    }\r\n\r\n    const [sortToggle, setSortToggle] = useState(defaultToggle);\r\n\tconst [parameter, setParameter] = useState();\r\n\r\n    const setSort = (param => (event) => {\r\n        let updateToggle = JSON.parse(JSON.stringify(defaultToggle));\r\n        if (sortToggle[param]) {\r\n            updateToggle[param] = -1 * sortToggle[param]\r\n        } else {\r\n            updateToggle[param] = 1;\r\n        }\r\n\t\tsetParameter(param);\r\n        /**/\r\n\r\n        setSortToggle(updateToggle);\r\n    })\r\n\tuseEffect(() => {\r\n\t\tlet sortedData=JSON.parse(JSON.stringify(filteredData));\r\n\t\tif (parameter === 'nextDate') {\r\n            setFilteredData(sortedData.sort((a, b) => (a.interviews.length === 0 ? new Date('3033-03-03') : new Date(a.interviews[0].nextDate)) > (b.interviews.length === 0 ? new Date('3033-03-03') : new Date(b.interviews[0].nextDate)) ? sortToggle[parameter] : -sortToggle[parameter]))\r\n        }\r\n        if (parameter === 'count') {\r\n            setFilteredData(sortedData.sort((a, b) => (a.interviews.length > b.interviews.length) ? sortToggle[parameter] : -sortToggle[parameter]))\r\n        }\r\n        if (parameter === 'mark') {\r\n            setFilteredData(sortedData.sort((a, b) => (a.mark > b.mark) ? sortToggle[parameter] : -sortToggle[parameter]))\r\n        }\r\n        if (parameter === 'candidateName') {\r\n            setFilteredData(sortedData.sort((a, b) => (a.candidateName > b.candidateName) ? sortToggle[parameter] : -sortToggle[parameter]))\r\n        }\r\n\t},[sortToggle])\r\n\t\r\n    useEffect(() => {\r\n\t\tsetTimeout(function(){\r\n\t\t\tsetSort('nextDate')();\r\n\t\t});\r\n    }, [])\r\n\t\r\n\t\r\n    \r\n\r\n\r\n\r\n    // Handle Pages \r\n\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [numPages, setNumPages] = useState(Math.ceil(filteredData.length / 10) || 1);\r\n    const [pageNumList, setPageNumList] = useState([...Array(numPages).keys()].map(item => item + 1))\r\n    const [data, setData] = useState();\r\n\r\n    useEffect(() => {\r\n        setData(filteredData.slice((currentPage - 1) * 10, currentPage * 10));\r\n        setNumPages(Math.ceil(filteredData.length / 10) || 1);\r\n    }, [currentPage, filteredData]);\r\n\r\n    useEffect(() => {\r\n        if (currentPage > numPages) {\r\n            setCurrentPage(numPages);\r\n        }\r\n    }, [numPages]);\r\n\r\n    const pageLimit = 6;\r\n\r\n    useEffect(() => {\r\n        let originalPages = [...Array(numPages).keys()].map(item => item + 1);\r\n        let startPage = 1;\r\n        let endPage = originalPages.length;\r\n        if (originalPages.length <= pageLimit) {\r\n            setPageNumList(originalPages);\r\n        }\r\n        else {\r\n            if (currentPage < Math.ceil(pageLimit / 2)) {\r\n                endPage = startPage + pageLimit - 1;\r\n            } else {\r\n                if (currentPage > originalPages.length - Math.ceil(pageLimit / 2)) {\r\n                    startPage = endPage - pageLimit + 1;\r\n                } else {\r\n                    startPage = currentPage - Math.ceil(pageLimit / 2) + 1;\r\n                    endPage = currentPage + Math.ceil(pageLimit / 2);\r\n                }\r\n            }\r\n            let limitedPages = [];\r\n            for (let i = startPage; i <= endPage; i++) {\r\n                limitedPages.push(i);\r\n            }\r\n            setPageNumList(limitedPages);\r\n        }\r\n    }, [currentPage, numPages]);\r\n\r\n    return (\r\n        <div className='bounceInAnimation mt-3'>\r\n            <div className=\"d-flex flex-column align-items-center\">\r\n                <div className=\"row w-90 m-3\">\r\n                    <input className=\"border border-dark rounded w-100\" type=\"text\" onChange={handleSearchBarChange} placeholder=\"搜尋...\" />\r\n                </div>\r\n                <div className=\"row\">\r\n                    <ul className=\"pagination\">\r\n                        <li className=\"page-item\">\r\n                            <button className=\"page-link\" type=\"button\" onClick={() => { if (currentPage !== 1) setCurrentPage(Number(currentPage) - 1) }} aria-label=\"Previous\">\r\n                                <span aria-hidden=\"true\">&laquo;</span>\r\n                            </button>\r\n                        </li>\r\n                        {\r\n                            pageNumList.map((num, index) => {\r\n                                return (\r\n                                    <li className={\"page-item \" + (currentPage === num ? \"active\" : \"\")}>\r\n                                        <button\r\n                                            className=\"page-link\"\r\n                                            style={{ width: \"50px\" }}\r\n                                            type=\"button\"\r\n                                            onClick={() => { setCurrentPage(Number(num)) }}\r\n                                        >\r\n                                            {num}\r\n                                        </button>\r\n                                    </li>\r\n                                );\r\n                            })\r\n                        }\r\n                        <li className=\"page-item\">\r\n                            <button className=\"page-link\" type=\"button\" onClick={() => { if (currentPage !== numPages) setCurrentPage(Number(currentPage) + 1) }} aria-label=\"Next\">\r\n                                <span aria-hidden=\"true\">&raquo;</span>\r\n                            </button>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            <div className='modal fade' tabIndex=\"-1\" id=\"confirmDelete\" aria-labelledby='modalTitle' aria-hidden=\"true\">\r\n                <div className=\"modal-dialog\">\r\n                    <div className='modal-content'>\r\n                        <div className='modal-header'>\r\n                            <div className='modal-title text-dark' id=\"modalTitle\">刪除項目</div>\r\n                            <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n                        </div>\r\n                        <div className='modal-body text-dark'>\r\n                            確定刪除已選取的項目嗎？\r\n                        </div>\r\n                        <div className='modal-footer'>\r\n                            <button type=\"button\" className=\"btn btn-dark\" data-bs-toggle=\"modal\" onClick={deleteData}>確定</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <div className='d-flex flex-column w-100 align-items-center'>\r\n                <div className=\"w-90 overflow-auto\">\r\n                    <ul className='list-group' style={{ minWidth: \"800px\" }}>\r\n                        <li className='list-group-item active container bg-light text-black border-gray'>\r\n\r\n                            <div className='row align-items-center'>\r\n                                {!!editData &&\r\n                                    <div className='col-1' />\r\n                                }\r\n                                <div className='col-2 position-sticky bg-light' style={{ left: 0 }}>\r\n                                    <button className={!!sortToggle.candidateName ? ('sort-order sort-order-' + sortToggle.candidateName) : 'sort-order'} onClick={setSort('candidateName')}>求職者名稱</button>\r\n\r\n                                </div>\r\n                                <div className='col-2'>\r\n                                    <button className={!!sortToggle.count ? ('sort-order sort-order-' + sortToggle.count) : 'sort-order'} onClick={setSort('count')}>相關記錄</button>\r\n                                </div>\r\n                                <div className='col-2'>\r\n                                    <button className={!!sortToggle.mark ? ('sort-order sort-order-' + sortToggle.mark) : 'sort-order'} onClick={setSort('mark')}>分數</button>\r\n\r\n                                </div>\r\n                                <div className='col-2'>\r\n                                    <button className={!!sortToggle.nextDate ? ('sort-order sort-order-' + sortToggle.nextDate) : 'sort-order'} onClick={setSort('nextDate')}>下次見面</button>\r\n                                </div>\r\n                                <div className='col d-inline-flex justify-content-end'>\r\n                                    {\r\n                                        !!editData &&\r\n                                        <button\r\n                                            className='me-2 btn btn-light border border-dark rounded bi bi-trash-fill'\r\n                                            type=\"button\"\r\n                                            data-bs-toggle=\"modal\"\r\n                                            data-bs-target=\"#confirmDelete\"\r\n                                        />\r\n                                    }\r\n\r\n                                    <button className={!!editData ? 'btn btn-dark rounded bi bi-unlock-fill' : 'btn btn-dark rounded bi bi-lock-fill'} onClick={handleClick}></button>\r\n                                </div>\r\n                            </div>\r\n                        </li>\r\n\r\n                        {!!data &&\r\n                            data.map(\r\n                                (datum, index) => {\r\n                                    return (\r\n                                        <li key={index} className='list-group-item container' style={{ height: \"60px\" }}>\r\n\r\n                                            <div className='row text-black'>\r\n                                                {!!editData &&\r\n                                                    <input className='col-1 align-self-center' type='checkbox' name={datum.candidateID} onClick={handleChange} />\r\n                                                }\r\n                                                <div className='col-2 position-sticky bg-white' style={{ left: 0 }}>\r\n                                                    {datum.candidateName}\r\n                                                </div>\r\n                                                <div className='col-2'>\r\n                                                    {datum.interviews === undefined ? \"0\" : datum.interviews.length}\r\n                                                </div>\r\n                                                <div className='col-2'>{datum.mark}</div>\r\n                                                <div className='col-2'>\r\n                                                    {datum.interviews.length === 0 ?\r\n                                                        \"沒有記錄\" :\r\n                                                        new Date(datum.interviews[0].nextDate).toLocaleDateString()}\r\n                                                </div>\r\n                                                <NavLink\r\n                                                    className='col-2'\r\n                                                    style={{ textDecoration: \"none\" }}\r\n                                                    to={datum.candidateID}>\r\n                                                    詳細\r\n                                                </NavLink>\r\n                                                {!!editData &&\r\n                                                    <button\r\n                                                        className=\"col-1 btn btn-light bi bi-trash-fill\"\r\n                                                        type=\"button\"\r\n                                                        name={datum.candidateID}\r\n                                                        onClick={deleteItem}\r\n                                                    />\r\n                                                }\r\n                                            </div>\r\n\r\n                                        </li>\r\n                                    );\r\n                                }\r\n                            )\r\n                        }\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default function InterviewListPage() {\r\n\r\n    const [data, setData] = useState();\r\n\r\n    const [AuthState, setAuthState] = useAuthState();\r\n    const [updated, setUpdated] = useState(0);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    const updateValue = () => {\r\n        setUpdated(updated + 1);\r\n    }\r\n\r\n    async function fetchData() {\r\n        setLoading(true)\r\n        await fetch(CANDIDATES_INTERVIEW_LIST_PATH, {\r\n            method: \"POST\",\r\n            credentials: \"include\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(AuthState)\r\n        })\r\n            .then(response => {\r\n                if (response.ok) {\r\n                    return (response.json());\r\n                }\r\n                throw response;\r\n            })\r\n            .then(data => {\r\n                setData(data);\r\n                setLoading(false);\r\n            }\r\n            )\r\n            .catch((error) => {\r\n                window.alert(error);\r\n                return;\r\n            }\r\n            );\r\n    }\r\n\r\n    useEffect(function effectFunction() {\r\n        fetchData();\r\n    }, [updated]);\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                !loading\r\n                    ?\r\n                    <Routes>\r\n                        <Route path=\"\" element={<InterviewList data={data ? data : \"\"} updateValue={updateValue} />} />\r\n                        <Route path=\":itemID\" element={<Item data={data ? data : \"\"} updateValue={updateValue} />} />\r\n                    </Routes>\r\n                    : \"\"\r\n            }\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\Michael\\Documents\\GitHub\\fromagent\\client\\src\\pages\\dashboard.jsx",["158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185"],[],"C:\\Users\\Michael\\Documents\\GitHub\\fromagent\\client\\src\\pages\\meetingList.jsx",["186","187","188","189","190","191","192"],[],"import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport { Route, Routes, NavLink, useParams } from 'react-router-dom';\r\nimport { displayMeetingFields } from '../consts/meeting.const';\r\nimport { CLIENT_CHANGE_NAME_PATH, DELETE_MEETINGS_PATH, MEETING_LIST_PATH } from '../consts/api.const';\r\nimport { DELETE_CLIENTS_PATH } from '../consts/api.const';\r\nimport { useAuthState } from '../authentication/authcontext';\r\n\r\nfunction ChangeNameModal(props) {\r\n    const updateValue = props.updateValue;\r\n    const [AuthState, setAuthState] = useAuthState();\r\n    const [newName, setNewName] = useState();\r\n    const clientID = useParams().itemID;\r\n    const handleChange = (e) => {\r\n        setNewName(e.target.value);\r\n    }\r\n    const changeName = (e) => {\r\n        fetch(CLIENT_CHANGE_NAME_PATH, {\r\n            method: \"POST\",\r\n            credentials: \"include\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                user: JSON.stringify(AuthState),\r\n                client: {\r\n                    clientID: clientID,\r\n                    clientNewName: newName\r\n                }\r\n            })\r\n        })\r\n            .then(res => {\r\n                if (res.ok) {\r\n                    return (res.json())\r\n                }\r\n            })\r\n            .then(\r\n                json => {\r\n                    alert(json.status + \"\\n\" + json.message);\r\n                    updateValue();\r\n                }\r\n            )\r\n            .catch(\r\n                error => {\r\n                    alert(error);\r\n                }\r\n            )\r\n    }\r\n\r\n    return (\r\n        <div className='modal fade' tabIndex=\"-1\" id=\"changeName\" aria-labelledby='modalTitle' aria-hidden=\"true\">\r\n            <div className=\"modal-dialog\">\r\n                <div className='modal-content'>\r\n                    <div className='modal-header'>\r\n                        <div className='modal-title text-dark' id=\"modalTitle\">新名字</div>\r\n                        <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n                    </div>\r\n                    <div className='modal-body text-dark'>\r\n                        <input className=\"w-100\" onChange={handleChange} />\r\n                    </div>\r\n                    <div className='modal-footer'>\r\n                        <button type=\"button\" className=\"btn btn-dark\" data-bs-toggle=\"modal\" onClick={changeName} >確定</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction Item(props) {\r\n\r\n    const [editData, setEditData] = useState(false);\r\n    const handleClick = () => {\r\n        setEditData(!editData);\r\n    }\r\n\r\n    const updateValue = props.updateValue;\r\n    const data = props.data;\r\n    let itemID = useParams();\r\n    const item = !!data && data.find(p => p.clientID === itemID.itemID);\r\n\r\n    //sort\r\n    if (item.meetings.length > 0) {\r\n\r\n\r\n        item.meetings.sort((a, b) => new Date(a.currentDate) <= new Date(b.currentDate) ? 1 : -1)\r\n\r\n    }\r\n\r\n\r\n    const deleteMeeting = async (e) => {\r\n        if (window.confirm(\"確定刪除已選取的項目嗎？\")) {\r\n            const targetMeeting = {\r\n                clientID: item.clientID,\r\n                target: e.target.name\r\n            };\r\n            await fetch(DELETE_MEETINGS_PATH, {\r\n                method: \"DELETE\",\r\n                credentials: \"include\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify(targetMeeting)\r\n            })\r\n                .then(\r\n                    (response) => {\r\n                        if (response.ok) {\r\n                            return (response.json());\r\n                        }\r\n                    }\r\n                )\r\n                .then(\r\n                    json => {\r\n                        if (json.status === \"success\") {\r\n                            window.alert(json.message);\r\n                            updateValue();\r\n                        }\r\n                    }\r\n                )\r\n                .catch(\r\n                    error => {\r\n                        window.alert(error);\r\n                    }\r\n                );\r\n        } else {\r\n            return;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='bounceInAnimation d-flex flex-column align-items-center'>\r\n            <ChangeNameModal updateValue={updateValue} />\r\n            <div className=\"w-90 my-3 rounded border\">\r\n                <div className=\"w-100 px-3 py-2 bg-gray\">\r\n                    <small>客戶名稱</small><br />\r\n                    <span style={{ fontSize: \"20px\" }}>\r\n                        {item.clientName + \" \"}\r\n                        <button className=\"btn btn-dark\" style={{ fontSize: \"10px\" }} type=\"button\" data-bs-toggle=\"modal\" data-bs-target=\"#changeName\">更改名稱</button>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n            <div className='w-90 overflow-auto'>\r\n                <div className='my-1'>相關記錄</div>\r\n                <table className=\"table bg-white \" style={{ minWidth: \"700px\" }}>\r\n                    <thead>\r\n                        <tr>\r\n                            {!!item.meetings &&\r\n                                displayMeetingFields.map((field, index) => {\r\n                                    return (\r\n                                        <th scope=\"col\">{field.label}</th>\r\n                                    );\r\n                                })\r\n                            }\r\n                            <th scope=\"col\">\r\n                                <div className='col d-inline-flex justify-content-end'>\r\n                                    <button className={!!editData ? 'btn btn-dark rounded bi bi-unlock-fill' : 'btn btn-dark rounded bi bi-lock-fill'} onClick={handleClick}></button>\r\n                                </div>\r\n                            </th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {!!item.meetings &&\r\n                            item.meetings.map((meeting, index) => {\r\n                                meeting.currentDate = new Date(meeting.date).toLocaleDateString();\r\n                                meeting.next = new Date(meeting.nextDate).toLocaleDateString();\r\n\r\n                                return (\r\n                                    <tr style={{ height: \"60px\" }}>\r\n                                        <th scope=\"row\">{meeting.currentDate}</th>\r\n                                        <td>{meeting.item.join(\"，\")}</td>\r\n                                        <td>{meeting.businessCategories.join(\"，\")}</td>\r\n                                        <td>{meeting.profit}</td>\r\n                                        <td>{meeting.next}</td>\r\n                                        <td>{meeting.note}</td>\r\n                                        <td>{meeting.score}</td>\r\n                                        {!!editData && <td>\r\n                                            <button className=\"btn btn-light bi bi-trash-fill\" type=\"button\" name={meeting._id} onClick={deleteMeeting} />\r\n                                        </td>}\r\n                                    </tr>\r\n                                );\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n                <div className=\"w-100 text-end text-white\">總分：{item.mark}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction MeetingList(props) {\r\n\r\n    const updateValue = props.updateValue;\r\n    const [editData, setEditData] = useState(false);\r\n    const [deleteList, setDeleteList] = useState([]);\r\n    const handleClick = () => {\r\n        setEditData(!editData);\r\n    }\r\n\r\n    async function deleteData() {\r\n        const _data = deleteList;\r\n        await fetch(DELETE_CLIENTS_PATH, {\r\n            method: \"DELETE\",\r\n            credentials: \"include\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(_data)\r\n        })\r\n            .then(\r\n                (response) => {\r\n                    if (response.ok) {\r\n                        return (response.json());\r\n                    }\r\n                }\r\n            )\r\n            .then(\r\n                json => {\r\n                    window.alert(json.status, \" \", json.deleteCount, \" clients have been deleted.\");\r\n                }\r\n            )\r\n            .catch(\r\n                error => {\r\n                    window.alert(error);\r\n                }\r\n            ).finally(updateValue())\r\n\r\n    }\r\n\r\n    async function deleteItem(e) {\r\n        if (window.confirm(\"確定刪除已選取的項目嗎？\")) {\r\n            const _data = [e.target.name];\r\n            await fetch(DELETE_CLIENTS_PATH, {\r\n                method: \"DELETE\",\r\n                credentials: \"include\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify(_data)\r\n            })\r\n                .then(\r\n                    (response) => {\r\n                        if (response.ok) {\r\n                            return (response.json());\r\n                        }\r\n                    }\r\n                )\r\n                .then(\r\n                    json => {\r\n                        window.alert(json.status, \" \", json.deleteCount, \" clients have been deleted.\");\r\n                    }\r\n                )\r\n                .catch(\r\n                    error => {\r\n                        window.alert(error);\r\n                    }\r\n                ).finally(updateValue())\r\n        } else {\r\n            return;\r\n        }\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        if (!!!deleteList.includes(e.target.name)) {\r\n            setDeleteList((prevDeleteList) => [...prevDeleteList, e.target.name]);\r\n\r\n        } else {\r\n            setDeleteList((prevDeleteList) => prevDeleteList.filter(value => value !== e.target.name));\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        setDeleteList(deleteList);\r\n    }, [deleteList])\r\n\r\n    // Search Bar\r\n\r\n    const rawData = props.data;\r\n    const [searchBarText, setSearchBarText] = useState(\"\");\r\n    const [filteredData, setFilteredData] = useState(rawData);\r\n    const handleSearchBarChange = (e) => {\r\n        setSearchBarText(e.target.value);\r\n    }\r\n\r\n    useEffect(() => {\r\n        setFilteredData(rawData.filter(datum => datum.clientName.includes(searchBarText)));\r\n    }, [searchBarText]);\r\n\r\n\r\n    //sort\r\n    const defaultToggle = {\r\n        nextDate: false,\r\n        mark: false,\r\n        count: false,\r\n        candidateName: false\r\n    }\r\n\r\n    const [sortToggle, setSortToggle] = useState(defaultToggle);\r\n\tconst [parameter, setParameter] = useState();\r\n\r\n    const setSort = (param => (event) => {\r\n        let updateToggle = JSON.parse(JSON.stringify(defaultToggle));\r\n        if (sortToggle[param]) {\r\n            updateToggle[param] = -1 * sortToggle[param]\r\n        } else {\r\n            updateToggle[param] = 1;\r\n        }\r\n\t\tsetParameter(param);\r\n        /**/\r\n\r\n        setSortToggle(updateToggle);\r\n    })\r\n\tuseEffect(() => {\r\n\t\tlet sortedData=JSON.parse(JSON.stringify(filteredData));\r\n\t\tif (parameter === 'nextDate') {\r\n            setFilteredData(sortedData.sort((a, b) => (a.meetings.length === 0 ? new Date('3033-03-03') : new Date(a.meetings[0].nextDate)) > (b.meetings.length === 0 ? new Date('3033-03-03') : new Date(b.meetings[0].nextDate)) ? sortToggle[parameter] : -sortToggle[parameter]))\r\n        }\r\n        if (parameter === 'count') {\r\n            setFilteredData(sortedData.sort((a, b) => (a.meetings.length > b.meetings.length) ? sortToggle[parameter] : -sortToggle[parameter]))\r\n        }\r\n        if (parameter === 'mark') {\r\n            setFilteredData(sortedData.sort((a, b) => (a.mark > b.mark) ? sortToggle[parameter] : -sortToggle[parameter]))\r\n        }\r\n        if (parameter === 'clientName') {\r\n            setFilteredData(sortedData.sort((a, b) => (a.clientName > b.clientName) ? sortToggle[parameter] : -sortToggle[parameter]))\r\n        }\r\n\t},[sortToggle])\r\n\t\r\n    useEffect(() => {\r\n\t\tsetTimeout(function(){\r\n\t\t\tsetSort('nextDate')();\r\n\t\t});\r\n    }, [])\r\n\r\n    // Handle Pages \r\n\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [numPages, setNumPages] = useState(Math.ceil(filteredData.length / 10) || 1);\r\n    const [pageNumList, setPageNumList] = useState([...Array(numPages).keys()].map(item => item + 1))\r\n    const [data, setData] = useState();\r\n\r\n    useEffect(() => {\r\n        setData(filteredData.slice((currentPage - 1) * 10, currentPage * 10));\r\n        setNumPages( Math.ceil(filteredData.length / 10) || 1);\r\n    }, [currentPage, filteredData]);\r\n\r\n    useEffect(() => {\r\n        if (currentPage > numPages) {\r\n            setCurrentPage(numPages);\r\n        }\r\n    }, [numPages]);\r\n\r\n    const pageLimit = 6;\r\n\r\n    useEffect(() => {\r\n        let originalPages = [...Array(numPages).keys()].map(item => item + 1);\r\n        let startPage = 1;\r\n        let endPage = originalPages.length;\r\n        if (originalPages.length <= pageLimit) {\r\n            setPageNumList(originalPages);\r\n        }\r\n        else {\r\n            if (currentPage < Math.ceil(pageLimit / 2)) {\r\n                endPage = startPage + pageLimit - 1;\r\n            } else {\r\n                if (currentPage > originalPages.length - Math.ceil(pageLimit / 2)) {\r\n                    startPage = endPage - pageLimit + 1;\r\n                } else {\r\n                    startPage = currentPage - Math.ceil(pageLimit / 2) + 1;\r\n                    endPage = currentPage + Math.ceil(pageLimit / 2);\r\n                }\r\n            }\r\n            let limitedPages = [];\r\n            for (let i = startPage; i <= endPage; i++) {\r\n                limitedPages.push(i);\r\n            }\r\n            setPageNumList(limitedPages);\r\n        }\r\n    }, [currentPage, numPages]);\r\n\r\n    return (\r\n        <div className='bounceInAnimation mt-3'>\r\n            <div className=\"d-flex flex-column align-items-center\">\r\n                <div className=\"row w-90 m-3\">\r\n                    <input className=\"border border-dark rounded w-100\" type=\"text\" onChange={handleSearchBarChange} placeholder=\"搜尋...\" />\r\n                </div>\r\n                <div className=\"row\">\r\n                    <ul className=\"pagination\">\r\n                        <li className=\"page-item\">\r\n                            <button className=\"page-link\" type=\"button\" onClick={() => { if (currentPage !== 1) setCurrentPage(Number(currentPage) - 1) }} aria-label=\"Previous\">\r\n                                <span aria-hidden=\"true\">&laquo;</span>\r\n                            </button>\r\n                        </li>\r\n                        {\r\n                            pageNumList.map((num, index) => {\r\n                                return (\r\n                                    <li className={\"page-item \" + (currentPage === num ? \"active\" : \"\")}>\r\n                                        <button\r\n                                            className=\"page-link\"\r\n                                            style={{ width: \"50px\" }}\r\n                                            type=\"button\"\r\n                                            onClick={() => { setCurrentPage(Number(num)) }}\r\n                                        >\r\n                                            {num}\r\n                                        </button>\r\n                                    </li>\r\n                                );\r\n                            })\r\n                        }\r\n                        <li className=\"page-item\">\r\n                            <button class=\"page-link\" type=\"button\" onClick={() => { if (currentPage !== numPages) setCurrentPage(Number(currentPage) + 1) }} aria-label=\"Next\">\r\n                                <span aria-hidden=\"true\">&raquo;</span>\r\n                            </button>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            <div className='modal fade' tabIndex=\"-1\" id=\"confirmDelete\" aria-labelledby='modalTitle' aria-hidden=\"true\">\r\n                <div className=\"modal-dialog\">\r\n                    <div className='modal-content'>\r\n                        <div className='modal-header'>\r\n                            <div className='modal-title text-dark' id=\"modalTitle\">刪除項目</div>\r\n                            <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n                        </div>\r\n                        <div className='modal-body text-dark'>\r\n                            確定刪除已選取的項目嗎？\r\n                        </div>\r\n                        <div className='modal-footer'>\r\n                            <button type=\"button\" className=\"btn btn-dark\" data-bs-toggle=\"modal\" onClick={deleteData}>確定</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <div className='d-flex flex-column w-100 align-items-center'>\r\n                <div className=\"w-90 overflow-auto\">\r\n                    <ul className='list-group' style={{ minWidth: \"800px\" }}>\r\n                        <li className='list-group-item active container bg-light text-black border-gray'>\r\n\r\n                            <div className='row align-items-center'>\r\n                                {!!editData &&\r\n                                    <div className='col-1' />\r\n                                }\r\n                                <div className='col-2 position-sticky bg-light' style={{ left: 0 }}>\r\n                                    <button className={!!sortToggle.clientName ? ('sort-order sort-order-' + sortToggle.clientName) : 'sort-order'} onClick={setSort('clientName')}>客戶名稱</button>\r\n                                </div>\r\n                                <div className='col-2'>\r\n                                    <button className={!!sortToggle.count ? ('sort-order sort-order-' + sortToggle.count) : 'sort-order'} onClick={setSort('count')}>相關記錄</button>\r\n                                </div>\r\n                                <div className='col-2'>\r\n                                    <button className={!!sortToggle.mark ? ('sort-order sort-order-' + sortToggle.mark) : 'sort-order'} onClick={setSort('mark')}>分數</button>\r\n                                </div>\r\n                                <div className='col-2'>\r\n                                    <button className={!!sortToggle.nextDate ? ('sort-order sort-order-' + sortToggle.nextDate) : 'sort-order'} onClick={setSort('nextDate')}>下次見面</button>\r\n                                </div>\r\n                                <div className='col d-inline-flex justify-content-end'>\r\n                                    {\r\n                                        !!editData &&\r\n                                        <button\r\n                                            className='me-2 btn btn-light border border-dark rounded bi bi-trash-fill'\r\n                                            type=\"button\"\r\n                                            data-bs-toggle=\"modal\"\r\n                                            data-bs-target=\"#confirmDelete\"\r\n                                        />\r\n                                    }\r\n\r\n                                    <button className={!!editData ? 'btn btn-dark rounded bi bi-unlock-fill' : 'btn btn-dark rounded bi bi-lock-fill'} onClick={handleClick}></button>\r\n                                </div>\r\n                            </div>\r\n                        </li>\r\n                        {!!data &&\r\n                            data.map(\r\n                                (datum, index) => {\r\n                                    return (\r\n                                        <li key={index} className='list-group-item container' style={{ height: \"60px\" }}>\r\n\r\n                                            <div className='row text-black'>\r\n                                                {!!editData &&\r\n                                                    <input className='col-1 align-self-center' type='checkbox' name={datum.clientID} onClick={handleChange} />\r\n                                                }\r\n                                                <div className='col-2 position-sticky bg-white' style={{ left: 0 }}>\r\n                                                    {datum.clientName}\r\n                                                </div>\r\n                                                <div className='col-2'>\r\n                                                    {datum.meetings === undefined ? \"0\" : datum.meetings.length}\r\n                                                </div>\r\n                                                <div className='col-2'>{datum.mark}</div>\r\n                                                <div className='col-2'>\r\n                                                    {datum.meetings.length === 0 ?\r\n                                                        \"沒有記錄\" :\r\n                                                        new Date(datum.meetings[0].nextDate).toLocaleDateString()}\r\n                                                </div>\r\n                                                <NavLink\r\n                                                    className='col-2'\r\n                                                    style={{ textDecoration: \"none\" }}\r\n                                                    to={datum.clientID}>\r\n                                                    詳細\r\n                                                </NavLink>\r\n                                                {!!editData &&\r\n                                                    <button\r\n                                                        className=\"col-1 btn btn-light bi bi-trash-fill\"\r\n                                                        type=\"button\"\r\n                                                        name={datum.clientID}\r\n                                                        onClick={deleteItem}\r\n                                                    />\r\n                                                }\r\n                                            </div>\r\n\r\n                                        </li>\r\n                                    );\r\n                                }\r\n                            )\r\n                        }\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default function MeetingListPage() {\r\n\r\n    const [data, setData] = useState();\r\n    const [AuthState, setAuthState] = useAuthState();\r\n    const [updated, setUpdated] = useState(0);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    function updateValue() {\r\n        setUpdated(updated + 1);\r\n    }\r\n\r\n    async function fetchData() {\r\n        setLoading(true);\r\n        await fetch(MEETING_LIST_PATH, {\r\n            method: \"POST\",\r\n            credentials: \"include\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(AuthState)\r\n        })\r\n            .then(response => {\r\n                if (response.ok) {\r\n                    return (response.json());\r\n                }\r\n                throw response;\r\n            })\r\n            .then(data => {\r\n                setData(data);\r\n                setLoading(false);\r\n            }\r\n            )\r\n            .catch((error) => {\r\n                window.alert(error);\r\n                return;\r\n            }\r\n            );\r\n    }\r\n\r\n    useEffect(function effectFunction() {\r\n        fetchData();\r\n    }, [updated]);\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                !loading\r\n                    ?\r\n                    <Routes>\r\n                        <Route\r\n                            path=\"\"\r\n                            element={\r\n                                <MeetingList\r\n                                    data={data ? data : \"\"}\r\n                                    updateValue={updateValue}\r\n                                />}\r\n                        />\r\n                        <Route\r\n                            path=\":itemID\"\r\n                            element={\r\n                                <Item\r\n                                    data={data ? data : \"\"}\r\n                                    updateValue={updateValue}\r\n                                />\r\n                            }\r\n                        />\r\n                    </Routes>\r\n                    : \"\"\r\n            }\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\Michael\\Documents\\GitHub\\fromagent\\client\\src\\pages\\addcandidate.jsx",["193"],[],"import React from 'react';\r\nimport Form from '../components/form.jsx';\r\nimport { useAuthState } from '../authentication/authcontext.jsx';\r\nimport { candidateFields } from '../consts/candidates.const.js';\r\nimport { CANDIDATES_ADD_RECORD_PATH } from '../consts/api.const.js';\r\n\r\nexport default function AddCandidatePage(props) {\r\n    const [AuthState, setAuthState] = useAuthState();\r\n    return (\r\n        <div className='bounceInAnimation d-flex justify-content-center'>\r\n            <Form fieldsArray={candidateFields} API={CANDIDATES_ADD_RECORD_PATH} defaultValues={{user: AuthState.username}} redirectAfterSubmit={true} />\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\Michael\\Documents\\GitHub\\fromagent\\client\\src\\pages\\addrecord.jsx",["194"],[],"import React from 'react';\r\nimport Form from '../components/form.jsx';\r\nimport { useAuthState } from '../authentication/authcontext.jsx';\r\nimport { meetingFields } from '../consts/meetings.const';\r\nimport { ADD_RECORD_PATH } from '../consts/api.const.js';\r\n\r\nexport default function AddRecordPage(props) {\r\n    const [authState, setAuthState] = useAuthState();\r\n    return (\r\n        <div className='bounceInAnimation d-flex justify-content-center'>\r\n            <Form fieldsArray={meetingFields} API={ADD_RECORD_PATH} defaultValues={{user: authState.username}} redirectAfterSubmit={true} />\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\Michael\\Documents\\GitHub\\fromagent\\client\\src\\pages\\settings.jsx",["195","196","197","198","199","200","201","202"],[],"C:\\Users\\Michael\\Documents\\GitHub\\fromagent\\client\\src\\pages\\yearlytarget.jsx",[],[],"C:\\Users\\Michael\\Documents\\GitHub\\fromagent\\client\\src\\consts\\candidatemeeting.const.js",[],[],"C:\\Users\\Michael\\Documents\\GitHub\\fromagent\\client\\src\\components\\form.jsx",["203","204","205","206","207","208","209","210","211","212","213","214"],[],"C:\\Users\\Michael\\Documents\\GitHub\\fromagent\\client\\src\\consts\\candidates.const.js",[],[],"C:\\Users\\Michael\\Documents\\GitHub\\fromagent\\client\\src\\pages\\usermanagement.jsx",["215","216","217","218","219","220"],[],"C:\\Users\\Michael\\Documents\\GitHub\\fromagent\\client\\src\\consts\\meeting.const.js",[],[],"C:\\Users\\Michael\\Documents\\GitHub\\fromagent\\client\\src\\consts\\meetings.const.js",[],[],"C:\\Users\\Michael\\Documents\\GitHub\\fromagent\\client\\src\\pages\\forgetpw.jsx",["221","222","223"],[],{"ruleId":"224","severity":1,"message":"225","line":7,"column":9,"nodeType":"226","messageId":"227","endLine":7,"endColumn":22},{"ruleId":"224","severity":1,"message":"228","line":7,"column":24,"nodeType":"226","messageId":"227","endLine":7,"endColumn":30},{"ruleId":"224","severity":1,"message":"229","line":8,"column":10,"nodeType":"226","messageId":"227","endLine":8,"endColumn":29},{"ruleId":"230","replacedBy":"231"},{"ruleId":"232","replacedBy":"233"},{"ruleId":"224","severity":1,"message":"234","line":1,"column":10,"nodeType":"226","messageId":"227","endLine":1,"endColumn":19},{"ruleId":"224","severity":1,"message":"235","line":1,"column":21,"nodeType":"226","messageId":"227","endLine":1,"endColumn":29},{"ruleId":"224","severity":1,"message":"236","line":10,"column":24,"nodeType":"226","messageId":"227","endLine":10,"endColumn":42},{"ruleId":"237","severity":1,"message":"238","line":25,"column":21,"nodeType":"239","messageId":"240","endLine":25,"endColumn":23},{"ruleId":"237","severity":1,"message":"241","line":27,"column":21,"nodeType":"239","messageId":"240","endLine":27,"endColumn":23},{"ruleId":"224","severity":1,"message":"242","line":13,"column":12,"nodeType":"226","messageId":"227","endLine":13,"endColumn":20},{"ruleId":"224","severity":1,"message":"243","line":13,"column":22,"nodeType":"226","messageId":"227","endLine":13,"endColumn":33},{"ruleId":"237","severity":1,"message":"241","line":60,"column":15,"nodeType":"239","messageId":"240","endLine":60,"endColumn":17},{"ruleId":"244","severity":1,"message":"245","line":79,"column":7,"nodeType":"246","endLine":79,"endColumn":18,"suggestions":"247"},{"ruleId":"244","severity":1,"message":"248","line":116,"column":8,"nodeType":"246","endLine":116,"endColumn":10,"suggestions":"249"},{"ruleId":"250","severity":1,"message":"251","line":147,"column":17,"nodeType":"252","endLine":147,"endColumn":75},{"ruleId":"224","severity":1,"message":"234","line":1,"column":17,"nodeType":"226","messageId":"227","endLine":1,"endColumn":26},{"ruleId":"224","severity":1,"message":"253","line":10,"column":23,"nodeType":"226","messageId":"227","endLine":10,"endColumn":35},{"ruleId":"244","severity":1,"message":"254","line":287,"column":8,"nodeType":"246","endLine":287,"endColumn":23,"suggestions":"255"},{"ruleId":"244","severity":1,"message":"256","line":326,"column":4,"nodeType":"246","endLine":326,"endColumn":16,"suggestions":"257"},{"ruleId":"244","severity":1,"message":"258","line":332,"column":8,"nodeType":"246","endLine":332,"endColumn":10,"suggestions":"259"},{"ruleId":"244","severity":1,"message":"260","line":355,"column":8,"nodeType":"246","endLine":355,"endColumn":18,"suggestions":"261"},{"ruleId":"224","severity":1,"message":"253","line":532,"column":23,"nodeType":"226","messageId":"227","endLine":532,"endColumn":35},{"ruleId":"244","severity":1,"message":"262","line":570,"column":8,"nodeType":"246","endLine":570,"endColumn":17,"suggestions":"263"},{"ruleId":"224","severity":1,"message":"264","line":8,"column":25,"nodeType":"226","messageId":"227","endLine":8,"endColumn":29},{"ruleId":"224","severity":1,"message":"265","line":8,"column":77,"nodeType":"226","messageId":"227","endLine":8,"endColumn":96},{"ruleId":"224","severity":1,"message":"266","line":8,"column":98,"nodeType":"226","messageId":"227","endLine":8,"endColumn":107},{"ruleId":"224","severity":1,"message":"267","line":16,"column":12,"nodeType":"226","messageId":"227","endLine":16,"endColumn":22},{"ruleId":"224","severity":1,"message":"268","line":16,"column":24,"nodeType":"226","messageId":"227","endLine":16,"endColumn":37},{"ruleId":"224","severity":1,"message":"269","line":17,"column":12,"nodeType":"226","messageId":"227","endLine":17,"endColumn":18},{"ruleId":"224","severity":1,"message":"270","line":17,"column":20,"nodeType":"226","messageId":"227","endLine":17,"endColumn":29},{"ruleId":"224","severity":1,"message":"271","line":20,"column":11,"nodeType":"226","messageId":"227","endLine":20,"endColumn":21},{"ruleId":"244","severity":1,"message":"272","line":62,"column":8,"nodeType":"246","endLine":62,"endColumn":10,"suggestions":"273"},{"ruleId":"244","severity":1,"message":"272","line":91,"column":8,"nodeType":"246","endLine":91,"endColumn":10,"suggestions":"274"},{"ruleId":"275","severity":1,"message":"276","line":174,"column":53,"nodeType":"277","messageId":"278","endLine":174,"endColumn":61},{"ruleId":"237","severity":1,"message":"241","line":190,"column":32,"nodeType":"239","messageId":"240","endLine":190,"endColumn":34},{"ruleId":"279","severity":1,"message":"280","line":211,"column":65,"nodeType":"281","messageId":"282","endLine":211,"endColumn":67},{"ruleId":"237","severity":1,"message":"241","line":212,"column":56,"nodeType":"239","messageId":"240","endLine":212,"endColumn":58},{"ruleId":"279","severity":1,"message":"280","line":281,"column":78,"nodeType":"281","messageId":"282","endLine":281,"endColumn":80},{"ruleId":"237","severity":1,"message":"241","line":282,"column":58,"nodeType":"239","messageId":"240","endLine":282,"endColumn":60},{"ruleId":"224","severity":1,"message":"283","line":313,"column":28,"nodeType":"226","messageId":"227","endLine":313,"endColumn":45},{"ruleId":"237","severity":1,"message":"241","line":345,"column":24,"nodeType":"239","messageId":"240","endLine":345,"endColumn":26},{"ruleId":"244","severity":1,"message":"284","line":401,"column":8,"nodeType":"246","endLine":401,"endColumn":21,"suggestions":"285"},{"ruleId":"244","severity":1,"message":"286","line":499,"column":8,"nodeType":"246","endLine":499,"endColumn":10,"suggestions":"287"},{"ruleId":"237","severity":1,"message":"238","line":506,"column":28,"nodeType":"239","messageId":"240","endLine":506,"endColumn":30},{"ruleId":"244","severity":1,"message":"288","line":549,"column":8,"nodeType":"246","endLine":549,"endColumn":31,"suggestions":"289"},{"ruleId":"237","severity":1,"message":"241","line":719,"column":45,"nodeType":"239","messageId":"240","endLine":719,"endColumn":47},{"ruleId":"237","severity":1,"message":"241","line":719,"column":76,"nodeType":"239","messageId":"240","endLine":719,"endColumn":78},{"ruleId":"237","severity":1,"message":"241","line":719,"column":107,"nodeType":"239","messageId":"240","endLine":719,"endColumn":109},{"ruleId":"224","severity":1,"message":"290","line":809,"column":12,"nodeType":"226","messageId":"227","endLine":809,"endColumn":26},{"ruleId":"244","severity":1,"message":"272","line":903,"column":8,"nodeType":"246","endLine":903,"endColumn":10,"suggestions":"291"},{"ruleId":"224","severity":1,"message":"253","line":1095,"column":23,"nodeType":"226","messageId":"227","endLine":1095,"endColumn":35},{"ruleId":"224","severity":1,"message":"253","line":11,"column":23,"nodeType":"226","messageId":"227","endLine":11,"endColumn":35},{"ruleId":"244","severity":1,"message":"254","line":286,"column":8,"nodeType":"246","endLine":286,"endColumn":23,"suggestions":"292"},{"ruleId":"244","severity":1,"message":"256","line":326,"column":4,"nodeType":"246","endLine":326,"endColumn":16,"suggestions":"293"},{"ruleId":"244","severity":1,"message":"258","line":332,"column":8,"nodeType":"246","endLine":332,"endColumn":10,"suggestions":"294"},{"ruleId":"244","severity":1,"message":"260","line":350,"column":8,"nodeType":"246","endLine":350,"endColumn":18,"suggestions":"295"},{"ruleId":"224","severity":1,"message":"253","line":523,"column":23,"nodeType":"226","messageId":"227","endLine":523,"endColumn":35},{"ruleId":"244","severity":1,"message":"262","line":561,"column":8,"nodeType":"246","endLine":561,"endColumn":17,"suggestions":"296"},{"ruleId":"224","severity":1,"message":"253","line":8,"column":23,"nodeType":"226","messageId":"227","endLine":8,"endColumn":35},{"ruleId":"224","severity":1,"message":"253","line":8,"column":23,"nodeType":"226","messageId":"227","endLine":8,"endColumn":35},{"ruleId":"224","severity":1,"message":"225","line":7,"column":10,"nodeType":"226","messageId":"227","endLine":7,"endColumn":23},{"ruleId":"224","severity":1,"message":"297","line":20,"column":9,"nodeType":"226","messageId":"227","endLine":20,"endColumn":20},{"ruleId":"237","severity":1,"message":"238","line":203,"column":20,"nodeType":"239","messageId":"240","endLine":203,"endColumn":22},{"ruleId":"237","severity":1,"message":"238","line":203,"column":37,"nodeType":"239","messageId":"240","endLine":203,"endColumn":39},{"ruleId":"244","severity":1,"message":"248","line":274,"column":8,"nodeType":"246","endLine":274,"endColumn":10,"suggestions":"298"},{"ruleId":"244","severity":1,"message":"272","line":303,"column":8,"nodeType":"246","endLine":303,"endColumn":10,"suggestions":"299"},{"ruleId":"300","severity":1,"message":"301","line":313,"column":33,"nodeType":"252","endLine":313,"endColumn":62},{"ruleId":"237","severity":1,"message":"241","line":340,"column":32,"nodeType":"239","messageId":"240","endLine":340,"endColumn":34},{"ruleId":"224","severity":1,"message":"302","line":13,"column":11,"nodeType":"226","messageId":"227","endLine":13,"endColumn":19},{"ruleId":"244","severity":1,"message":"303","line":33,"column":8,"nodeType":"246","endLine":33,"endColumn":23,"suggestions":"304"},{"ruleId":"237","severity":1,"message":"241","line":49,"column":112,"nodeType":"239","messageId":"240","endLine":49,"endColumn":114},{"ruleId":"224","severity":1,"message":"305","line":72,"column":10,"nodeType":"226","messageId":"227","endLine":72,"endColumn":24},{"ruleId":"244","severity":1,"message":"303","line":92,"column":8,"nodeType":"246","endLine":92,"endColumn":23,"suggestions":"306"},{"ruleId":"224","severity":1,"message":"253","line":125,"column":23,"nodeType":"226","messageId":"227","endLine":125,"endColumn":35},{"ruleId":"224","severity":1,"message":"302","line":126,"column":11,"nodeType":"226","messageId":"227","endLine":126,"endColumn":19},{"ruleId":"244","severity":1,"message":"303","line":139,"column":8,"nodeType":"246","endLine":139,"endColumn":23,"suggestions":"307"},{"ruleId":"244","severity":1,"message":"308","line":170,"column":8,"nodeType":"246","endLine":170,"endColumn":10,"suggestions":"309"},{"ruleId":"244","severity":1,"message":"310","line":187,"column":8,"nodeType":"246","endLine":187,"endColumn":23,"suggestions":"311"},{"ruleId":"224","severity":1,"message":"312","line":242,"column":11,"nodeType":"226","messageId":"227","endLine":242,"endColumn":19},{"ruleId":"279","severity":1,"message":"313","line":253,"column":50,"nodeType":"314","messageId":"315","endLine":253,"endColumn":59},{"ruleId":"224","severity":1,"message":"253","line":10,"column":23,"nodeType":"226","messageId":"227","endLine":10,"endColumn":35},{"ruleId":"224","severity":1,"message":"253","line":200,"column":23,"nodeType":"226","messageId":"227","endLine":200,"endColumn":35},{"ruleId":"237","severity":1,"message":"238","line":215,"column":84,"nodeType":"239","messageId":"240","endLine":215,"endColumn":86},{"ruleId":"244","severity":1,"message":"262","line":257,"column":12,"nodeType":"246","endLine":257,"endColumn":21,"suggestions":"316"},{"ruleId":"244","severity":1,"message":"317","line":273,"column":8,"nodeType":"246","endLine":273,"endColumn":23,"suggestions":"318"},{"ruleId":"244","severity":1,"message":"260","line":291,"column":8,"nodeType":"246","endLine":291,"endColumn":18,"suggestions":"319"},{"ruleId":"224","severity":1,"message":"234","line":1,"column":17,"nodeType":"226","messageId":"227","endLine":1,"endColumn":26},{"ruleId":"224","severity":1,"message":"320","line":4,"column":90,"nodeType":"226","messageId":"227","endLine":4,"endColumn":109},{"ruleId":"224","severity":1,"message":"321","line":5,"column":10,"nodeType":"226","messageId":"227","endLine":5,"endColumn":22},"no-unused-vars","'SocketContext' is defined but never used.","Identifier","unusedVar","'socket' is defined but never used.","'GAPI_GET_USER_TOKEN' is defined but never used.","no-native-reassign",["322"],"no-negated-in-lhs",["323"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'dispatchLoginState' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'forgetPW' is assigned a value but never used.","'setForgetPW' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'navigate' and 'query'. Either include them or remove the dependency array.","ArrayExpression",["324"],"React Hook useEffect has a missing dependency: 'dispatchAuthState'. Either include it or remove the dependency array.",["325"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'setAuthState' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'rawData'. Either include it or remove the dependency array.",["326"],"React Hook useEffect has missing dependencies: 'filteredData' and 'parameter'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setFilteredData' needs the current value of 'parameter'.",["327"],"React Hook useEffect has a missing dependency: 'setSort'. Either include it or remove the dependency array.",["328"],"React Hook useEffect has a missing dependency: 'currentPage'. Either include it or remove the dependency array.",["329"],"React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.",["330"],"'Cell' is defined but never used.","'ResponsiveContainer' is defined but never used.","'LabelList' is defined but never used.","'subManager' is assigned a value but never used.","'setSubManager' is assigned a value but never used.","'isRead' is assigned a value but never used.","'setIsRead' is assigned a value but never used.","'handleShow' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'AuthState'. Either include it or remove the dependency array.",["331"],["332"],"react/style-prop-object","Style prop value must be an object","JSXAttribute","stylePropNotObject","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'setFetchBtnStatus' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchBarChart'. Either include it or remove the dependency array.",["333"],"React Hook useEffect has missing dependencies: 'AuthState' and 'chartPeriod'. Either include them or remove the dependency array.",["334"],"React Hook useEffect has missing dependencies: 'AuthState', 'FetchRounds', and 'subManagersData'. Either include them or remove the dependency array. You can also do a functional update 'setFetchRounds(F => ...)' if you only need 'FetchRounds' in the 'setFetchRounds' call.",["335"],"'subManagerList' is assigned a value but never used.",["336"],["337"],["338"],["339"],["340"],["341"],"'popupWindow' is assigned a value but never used.",["342"],["343"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'required' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'fieldValues', 'props.name', and 'setFieldValues'. Either include them or remove the dependency array.",["344"],"'DropdownSelect' is defined but never used.",["345"],["346"],"React Hook useEffect has missing dependencies: 'API' and 'AuthState'. Either include them or remove the dependency array.",["347"],"React Hook useEffect has a missing dependency: 'rawData'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setFilteredData' needs the current value of 'rawData'.",["348"],"'location' is assigned a value but never used.","Array.prototype.map() expects a return value from function.","FunctionExpression","expectedInside",["349"],"React Hook useEffect has a missing dependency: 'userList'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setFilteredData' needs the current value of 'userList'.",["350"],["351"],"'RESUME_SESSION_PATH' is defined but never used.","'useAuthState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"352","fix":"353"},{"desc":"354","fix":"355"},{"desc":"356","fix":"357"},{"desc":"358","fix":"359"},{"desc":"360","fix":"361"},{"desc":"362","fix":"363"},{"desc":"364","fix":"365"},{"desc":"366","fix":"367"},{"desc":"366","fix":"368"},{"desc":"369","fix":"370"},{"desc":"371","fix":"372"},{"desc":"373","fix":"374"},{"desc":"366","fix":"375"},{"desc":"356","fix":"376"},{"desc":"358","fix":"377"},{"desc":"360","fix":"378"},{"desc":"362","fix":"379"},{"desc":"364","fix":"380"},{"desc":"354","fix":"381"},{"desc":"366","fix":"382"},{"desc":"383","fix":"384"},{"desc":"385","fix":"386"},{"desc":"385","fix":"387"},{"desc":"388","fix":"389"},{"desc":"356","fix":"390"},{"desc":"364","fix":"391"},{"desc":"392","fix":"393"},{"desc":"362","fix":"394"},"Update the dependencies array to be: [AuthState, navigate, query]",{"range":"395","text":"396"},"Update the dependencies array to be: [dispatchAuthState]",{"range":"397","text":"398"},"Update the dependencies array to be: [rawData, searchBarText]",{"range":"399","text":"400"},"Update the dependencies array to be: [filteredData, parameter, sortToggle]",{"range":"401","text":"402"},"Update the dependencies array to be: [setSort]",{"range":"403","text":"404"},"Update the dependencies array to be: [currentPage, numPages]",{"range":"405","text":"406"},"Update the dependencies array to be: [fetchData, updated]",{"range":"407","text":"408"},"Update the dependencies array to be: [AuthState]",{"range":"409","text":"410"},{"range":"411","text":"410"},"Update the dependencies array to be: [chartPeriod, fetchBarChart]",{"range":"412","text":"413"},"Update the dependencies array to be: [AuthState, chartPeriod]",{"range":"414","text":"415"},"Update the dependencies array to be: [AuthState, FetchRounds, subManagersData, subManagersTeamProfit]",{"range":"416","text":"417"},{"range":"418","text":"410"},{"range":"419","text":"400"},{"range":"420","text":"402"},{"range":"421","text":"404"},{"range":"422","text":"406"},{"range":"423","text":"408"},{"range":"424","text":"398"},{"range":"425","text":"410"},"Update the dependencies array to be: [activeOptions, fieldValues, props.name, setFieldValues]",{"range":"426","text":"427"},"Update the dependencies array to be: [currentOption, fieldValues, props.name, setFieldValues]",{"range":"428","text":"429"},{"range":"430","text":"429"},"Update the dependencies array to be: [API, AuthState]",{"range":"431","text":"432"},{"range":"433","text":"400"},{"range":"434","text":"408"},"Update the dependencies array to be: [searchBarText, userList]",{"range":"435","text":"436"},{"range":"437","text":"406"},[2395,2406],"[AuthState, navigate, query]",[3503,3505],"[dispatchAuthState]",[10619,10634],"[rawData, searchBarText]",[12251,12263],"[filteredData, parameter, sortToggle]",[12359,12361],"[setSort]",[13023,13033],"[currentPage, numPages]",[23951,23960],"[fetchData, updated]",[2449,2451],"[AuthState]",[3281,3283],[16297,16310],"[chartPeriod, fetchBarChart]",[19499,19501],"[AuthState, chartPeriod]",[21450,21473],"[AuthState, FetchRounds, subManagersData, subManagersTeamProfit]",[37855,37857],[10573,10588],[12189,12201],[12297,12299],[12946,12956],[23815,23824],[8223,8225],[9055,9057],[1239,1254],"[activeOptions, fieldValues, props.name, setFieldValues]",[3609,3624],"[currentOption, fieldValues, props.name, setFieldValues]",[5369,5384],[6273,6275],"[API, AuthState]",[6811,6826],[8901,8910],[9357,9372],"[searchBarText, userList]",[10019,10029]]